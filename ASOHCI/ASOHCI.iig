//
//  ASOHCI.iig
//  ASOHCI
//
//  Created by Aleksandr Shabelnikov on 23.08.2025.
//

#ifndef ASOHCI_h
#define ASOHCI_h

#include <Availability.h>
#include <DriverKit/IOService.iig>
#include <DriverKit/OSAction.iig>
#include <DriverKit/IOInterruptDispatchSource.iig>
#include <DriverKit/OSData.iig>
#include <DriverKit/IOBufferMemoryDescriptor.iig>
#include <PCIDriverKit/IOPCIDevice.iig>


class ASOHCI : public IOService
{
public:
    virtual bool init() override;
    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;

    // Interrupt action (called on a DriverKit dispatch queue)
    virtual void InterruptOccurred(OSAction* action,
                                   uint64_t count,
                                   uint64_t time)
        TYPE(IOInterruptDispatchSource::InterruptOccurred);

    // Bridge logging method
    virtual kern_return_t CopyBridgeLogs(OSData** outData);

private:
    // ivars youâ€™ll keep
    IOPCIDevice*                     pciDevice   = nullptr;
    IOMemoryMap*                     bar0Map     = nullptr;
    IOInterruptDispatchSource*       intSource   = nullptr;
    IODispatchQueue*                 defaultQ    = nullptr;

};

#endif /* ASOHCI_h */
